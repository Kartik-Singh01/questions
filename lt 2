class Solution {
public:
    int lengthOfLIS(vector<int>& nums) {
        int n=nums.size();
        vector<vector<int>>dp(n,vector<int>(n,-1));
        return f(0,0,n,nums,dp);
    }

  int f(int i,int prev,int n,vector<int>& nums,vector<vector<int>>&dp)
  {
      if(i==n)
      {
          return 0;
      }
      if(dp[i][prev]!=-1){return dp[i][prev];}
      
      int take=INT_MIN;
      int not_take=0+f(i+1,prev,n,nums,dp);
      if(prev==i){
       take=1+f(i+1,i,n,nums,dp);
       not_take=0+f(i+1,i+1,n,nums,dp);
      }
      else if(nums[i]>nums[prev])
      {
        take=1+f(i+1,i,n,nums,dp);
      }
      
      return dp[i][prev]=max(take,not_take);
  }
};
